{"version":3,"file":"rich-data-table-angular.js","sources":["ng://rich-data-table-angular/lib/rich-data-table-angular.service.ts","ng://rich-data-table-angular/lib/multi-select-search/multi-select-search.component.ts","ng://rich-data-table-angular/lib/multi-select-search/multi-select-search.module.ts","ng://rich-data-table-angular/lib/rich-data-table-angular.component.ts","ng://rich-data-table-angular/lib/rich-data-table-angular.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RichDataTableAngularService {\n\n  constructor() { }\n}\n","import {  Component,\n          OnInit,\n          ViewChild,\n          ElementRef,\n          Output,\n          EventEmitter,\n          Input,\n          OnChanges,\n          SimpleChanges,\n          ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { MatAutocompleteTrigger } from '@angular/material';\nimport { startWith, map, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'award-multi-select-search',\n  templateUrl: './multi-select-search.component.html',\n  styleUrls: ['./multi-select-search.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MultiSelectSearchComponent implements OnInit, OnChanges {\n  searchContrl = new FormControl();\n  private autoCompleteContrl = new FormControl();\n  filteredOptions$: Observable<string[]>;\n  selectedOptions$ = new BehaviorSubject<string[]>([]);\n  autoCompleteData$ = new BehaviorSubject<Array<string>>([]);\n\n  @ViewChild('searchInput', null) searchInput: ElementRef<HTMLInputElement>;\n  @ViewChild('searchInput', { read: MatAutocompleteTrigger, static: true }) autoComplete: MatAutocompleteTrigger;\n\n  @Output()\n  liveChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n  @Input()\n  dataSource;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.filteredOptions$ = combineLatest(\n      this.searchContrl.valueChanges.pipe(startWith('')),\n      this.autoCompleteData$\n      .pipe(startWith([]))\n      .pipe(distinctUntilChanged((a, b) => a.join(',') === b.join(',')))\n    )\n    .pipe(map(([searchValue, data]) => this._filter(searchValue, data)));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.dataSource.currentValue) {\n      const data = [...new Set(changes.dataSource.currentValue)];\n      this.autoCompleteData$.next(data.filter(d => d !== null) as string[]);\n    }\n  }\n  /**\n   * Method to all clear the filter values\n   */\n  public clearFilter(): void {\n    this.searchContrl.setValue('');\n    this.selectedOptions$.next([]);\n    this.liveChange.emit([]);\n  }\n  /**\n   * Method to remove an item from filter\n   * @param option - filter string to be removed\n   */\n  private remove(option: string): void {\n    const selectedOptions = this.selectedOptionsValue.filter(o => o !== option);\n    this.selectedOptions$.next(selectedOptions);\n    this.liveChange.emit(selectedOptions);\n  }\n  /**\n   * Method to add filter to existing filter string\n   * @param option - filter string to be added\n   */\n  private add(option: string): void {\n    const selectedOptions = this.selectedOptionsValue;\n    selectedOptions.push(option);\n    this.selectedOptions$.next(selectedOptions);\n    this.liveChange.emit(selectedOptions);\n  }\n  /**\n   * Handler for select/deselect/select-all of items from suggestions\n   * @param selectedValue - selected/deselected value\n   */\n  onOptionSelectionChange(selectedValue: string): void {\n    if (selectedValue === 'All') {\n      this.selectedOptionsValue.length === this.autoCompleteData$.getValue().length ?\n      this.selectedOptions$.next([]) : this.selectedOptions$.next(this.autoCompleteData$.getValue());\n      this.liveChange.emit(this.selectedOptionsValue);\n    } else {\n      const newOption = selectedValue;\n      this.selectedOptionsValue.includes(newOption) ? this.remove(newOption) : this.add(newOption);\n    }\n    this.searchContrl.setValue('');\n    this.searchInput.nativeElement.blur();\n    this.autoComplete.closePanel();\n    // setTimeout(() => {\n    //   this.autoComplete.openPanel();\n    // });\n  }\n  /**\n   * Clear search field on focus out without changing searchform control\n   */\n  _setFocus(isFocussed) {\n    if (!isFocussed && !this.autoComplete.panelOpen) {\n      this.searchContrl.setValue(null);\n    }\n  }\n  /**\n   * Getter for selected options\n   */\n  get selectedOptionsValue() {\n    return this.selectedOptions$.getValue();\n  }\n  /**\n   * Utility method for filtering the suggestions based on typed value\n   * @param value - typed value\n   * @param searchData - datasource\n   */\n  private _filter(value: string, searchData: Array<string>): string[] {\n    let allData = searchData;\n    if (this.selectedOptionsValue.length) {\n      // showing all selected values first followed by unselected values\n      const selected = searchData.filter(data => this.selectedOptionsValue.includes(data));\n      const unselected = searchData.filter(data => !selected.includes(data));\n      allData = selected.concat(unselected);\n    }\n    if (value) {\n      const filterValue = value.toString().toLowerCase();\n      return allData.filter(option => {\n        return option.toString().toLowerCase().includes(filterValue);\n      });\n     } else {\n      return allData;\n     }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport {MatCheckboxModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatFormFieldModule,\n        MatListModule,\n        MatIconModule\n        } from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MultiSelectSearchComponent } from './multi-select-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule\n  ],\n  entryComponents: [\n  ],\n  declarations: [\n    MultiSelectSearchComponent],\n  exports: [\n    MultiSelectSearchComponent\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AwardMultiSelectSearchModule {}\n","import { Component, OnInit, ViewEncapsulation, OnChanges, Input, TemplateRef, Output, \n  EventEmitter, ViewChild, ViewChildren, QueryList, SimpleChanges } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { MultiSelectSearchComponent } from './multi-select-search';\n\nexport interface AwardDataColumn {\n  text: string;\n  bindingKey?: string;\n  type: ColumnType;\n  iconTooltipBindingKey?: string;\n  intialSort?: boolean;\n  searchVisible?: boolean;\n  columnTemplateRef?: TemplateRef<any>;\n}\n\nexport type SelectMode = 'None' | 'SingleSelect' | 'MultiSelect';\nexport type ColumnType = 'string' | 'date' | 'template';\n\ninterface TableFilter {\n  [column: string]: string[];\n}\n\n@Component({\n  selector: 'rich-data-table',\n  templateUrl: './rich-data-table-angular.component.html',\n  styleUrls: ['./rich-data-table-angular.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [DatePipe],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', visibility: 'hidden'})),\n      state('expanded', style({height: '*', visibility: 'visible'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class RichDataTableAngularComponent implements OnInit, OnChanges {\n\n  @Input()\n  dataSource;\n\n  @Input()\n  displayedColumns: Array<AwardDataColumn>;\n\n  @Input()\n  mode?: SelectMode;\n\n  @Input()\n  selectAll?: boolean;\n\n  @Input()\n  expandedRowTemplateRef?: TemplateRef<any>;\n\n  @Input()\n  isExpandable?: boolean;\n\n  @Output()\n  selectionChange: EventEmitter<object> = new EventEmitter<object>();\n\n  allColumns: string[] = [];\n  private filters: TableFilter = {};\n  selection: SelectionModel<object>;\n  loading$ = new BehaviorSubject<boolean>(true);\n  tableData;\n  intialSort: string;\n  expandedElement: object;\n\n  @ViewChild(MatSort, null) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChildren(MultiSelectSearchComponent, null) searchComponents: QueryList<MultiSelectSearchComponent>;\n\n\n  constructor(public datepipe: DatePipe) {\n    this.mode = 'None';\n    this.selectAll = false;\n    this.loading$.next(true);\n    this.isExpandable = false;\n    this.tableData = new MatTableDataSource([]);\n  }\n\n  ngOnInit() {\n    this.selection = new SelectionModel<object>(this.mode === 'MultiSelect', [], true);\n    if (this.displayedColumns) {\n      this.displayedColumns.map(column => {\n        if (!column.bindingKey) {\n          column.bindingKey = column.text;\n        }\n        if (column.searchVisible !== false) {\n          column.searchVisible = true;\n        }\n      });\n      this.allColumns = this.allColumns.concat(this.displayedColumns.map(column => column.bindingKey));\n      this._handleMode();\n      const intialSort = this.displayedColumns.filter(d => d.intialSort === true);\n      this.intialSort = intialSort.length ? intialSort[0].bindingKey : '';\n    }\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.dataSource && changes.dataSource.currentValue) {\n      if (changes.dataSource.currentValue !== null) {\n        this.loading$.next(false);\n      }\n      this.selection = new SelectionModel<object>(this.mode === 'MultiSelect', [], true);\n      this.tableData = new MatTableDataSource(changes.dataSource.currentValue);\n      this.tableData.filterPredicate =\n        (data: object, filters: TableFilter) => {\n          return this.getTableFilterPredicate(data, filters);\n        };\n      this.tableData.paginator = this.paginator;\n      this.tableData.sort = this.sort;\n      this.clearFilter();\n      if (this.selectAll && this.mode === 'MultiSelect') {\n        this.tableData.data.forEach(row => this.selection.select(row));\n      }\n    }\n  }\n  /**\n   * Getter for selected items from table\n   */\n  public getSelectedItems(): any {\n    return this.selection.selected;\n  }\n  /**\n   * Method to clear all selection from Table\n   */\n  public clearSelection() {\n    this.selection.clear();\n  }\n  public toggleRowExpansion(row) {\n    if (this.isExpandable) {\n      this.expandedElement = this.expandedElement === row ? null : row;\n    }\n  }\n  /**\n   * Utility method to getRowData\n   * @param row - row name\n   */\n  public getRowData(row: string) {\n    const column: AwardDataColumn = this.displayedColumns.filter(o => o.bindingKey === row)[0];\n    if (column.type === 'date') {\n      return this.tableData && this.tableData.data.map(o => this.datepipe.transform(o[row], 'yyyy-MM-dd HH:mm'));\n    } else {\n      return this.tableData && this.tableData.data.map(o => o[row]);\n    }\n  }\n  /**\n   * Utility method to check if all items are selected\n   */\n  public isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.tableData.filteredData.length ?\n                    this.tableData.filteredData.length :\n                    this.tableData.data.length;\n    return numSelected === numRows;\n  }\n  /**\n   * Handler for clearing the filters\n   */\n  clearFilter() {\n    if (this.searchComponents) {\n      this.searchComponents.forEach(searchComponent => searchComponent.clearFilter());\n    }\n  }\n  /**\n   * Hanlder for applying filter on livechange of text in filter\n   */\n  public applyFilter(filters: string[], column: string) {\n    this.filters[column] = filters;\n    this.tableData.filter = this.filters;\n  }\n  /**\n   * Selects all rows if they are not all selected; otherwise clear selection\n   */\n  public masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      (this.tableData.filteredData.length ? this.tableData.filteredData : this.tableData.data)\n      .forEach(row => this.selection.select(row));\n    this.selectionChange.emit(this.getSelectedItems());\n  }\n  /**\n   * Handler for selection/deselection of items and to emit the change event\n   * @param row - Row to be selected/deselected\n   */\n  public onSingleSelectionChange(row: object) {\n    this.selection.toggle(row);\n    this.selectionChange.emit(this.getSelectedItems());\n  }\n  /**\n   * Utility method to handle the table selection mode\n   */\n  private _handleMode() {\n    if ((this.mode === 'MultiSelect' || this.mode === 'SingleSelect') && !this.allColumns.includes('select')) {\n      this.allColumns.unshift('select');\n    } else if (this.mode === 'None') {\n      let index = this.allColumns.indexOf('select');\n      index >= 0 ? index = index : index = this.allColumns.indexOf('action');\n      if (index >= 0) {\n        this.allColumns.splice(index, 1);\n      }\n    }\n  }\n  /**\n   * Utility method to write the filter predicate for table\n   * @param data - table data\n   * @param filters - key value pair of <column> : <filter string>\n   */\n  private getTableFilterPredicate(data: object, filters: TableFilter) {\n    const matchFilter = [];\n    const columns = Object.keys(filters);\n    columns.forEach(column => {\n      const searchValues: string[] = filters[column];\n      if (searchValues.length) {\n        const customFilter = [];\n        searchValues.forEach(value => {\n          if (!data[column]) {\n            return customFilter.push(false);\n          }\n          const type = this.displayedColumns.filter(o => o.bindingKey === column)[0].type;\n          if (type === 'date') {\n            const isEqual = this.datepipe.transform(data[column], 'dd-MM-yy') === value;\n            return customFilter.push(isEqual);\n          } else {\n            return customFilter.push(data[column].toString().includes(value));\n          }\n\n        });\n        matchFilter.push(customFilter.some(Boolean)); // OR\n      }\n    });\n    return matchFilter.every(Boolean); // AND\n  }\n  get isSearchVisibleForSomeColumn() {\n    return this.displayedColumns && this.displayedColumns.filter(c => c.searchVisible === true).length > 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RichDataTableAngularComponent } from './rich-data-table-angular.component';\nimport {    MatTableModule,\n  MatButtonModule,\n  MatIconModule,\n  MatCheckboxModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatNativeDateModule,\n  MatSortModule,\n  MatTooltipModule,\n  MatRadioModule,\n  MatFormFieldModule} from '@angular/material';\nimport { AwardMultiSelectSearchModule } from './multi-select-search';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [RichDataTableAngularComponent],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatNativeDateModule,\n    MatSortModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatIconModule,\n    AwardMultiSelectSearchModule\n  ],\n  exports: [RichDataTableAngularComponent]\n})\nexport class RichDataTableAngularModule { }\n"],"names":[],"mappings":"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"}