!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/animations"),require("@angular/cdk/collections"),require("rxjs"),require("@angular/material"),require("@angular/forms"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("rich-data-table-angular",["exports","@angular/core","@angular/common","@angular/animations","@angular/cdk/collections","rxjs","@angular/material","@angular/forms","rxjs/operators"],t):t((e=e||self)["rich-data-table-angular"]={},e.ng.core,e.ng.common,e.ng.animations,e.ng.cdk.collections,e.rxjs,e.ng.material,e.ng.forms,e.rxjs.operators)}(this,(function(e,t,a,n,l,i,o,r,c){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function s(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,l,i=a.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)o.push(n.value)}catch(e){l={error:e}}finally{try{n&&!n.done&&(a=i.return)&&a.call(i)}finally{if(l)throw l.error}}return o}var d=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),u=function(){function e(){this.searchContrl=new r.FormControl,this.autoCompleteContrl=new r.FormControl,this.selectedOptions$=new i.BehaviorSubject([]),this.autoCompleteData$=new i.BehaviorSubject([]),this.liveChange=new t.EventEmitter}return e.prototype.ngOnInit=function(){var e=this;this.filteredOptions$=i.combineLatest(this.searchContrl.valueChanges.pipe(c.startWith("")),this.autoCompleteData$.pipe(c.startWith([])).pipe(c.distinctUntilChanged((function(e,t){return e.join(",")===t.join(",")})))).pipe(c.map((function(t){var a=s(t,2),n=a[0],l=a[1];return e._filter(n,l)})))},e.prototype.ngOnChanges=function(e){if(e.dataSource.currentValue){var t=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e}(new Set(e.dataSource.currentValue));this.autoCompleteData$.next(t.filter((function(e){return null!==e})))}},e.prototype.clearFilter=function(){this.searchContrl.setValue(""),this.selectedOptions$.next([]),this.liveChange.emit([])},e.prototype.remove=function(e){var t=this.selectedOptionsValue.filter((function(t){return t!==e}));this.selectedOptions$.next(t),this.liveChange.emit(t)},e.prototype.add=function(e){var t=this.selectedOptionsValue;t.push(e),this.selectedOptions$.next(t),this.liveChange.emit(t)},e.prototype.onOptionSelectionChange=function(e){if("All"===e)this.selectedOptionsValue.length===this.autoCompleteData$.getValue().length?this.selectedOptions$.next([]):this.selectedOptions$.next(this.autoCompleteData$.getValue()),this.liveChange.emit(this.selectedOptionsValue);else{var t=e;this.selectedOptionsValue.includes(t)?this.remove(t):this.add(t)}this.searchContrl.setValue(""),this.searchInput.nativeElement.blur(),this.autoComplete.closePanel()},e.prototype._setFocus=function(e){e||this.autoComplete.panelOpen||this.searchContrl.setValue(null)},Object.defineProperty(e.prototype,"selectedOptionsValue",{get:function(){return this.selectedOptions$.getValue()},enumerable:!0,configurable:!0}),e.prototype._filter=function(e,t){var a=this,n=t;if(this.selectedOptionsValue.length){var l=t.filter((function(e){return a.selectedOptionsValue.includes(e)})),i=t.filter((function(e){return!l.includes(e)}));n=l.concat(i)}if(e){var o=e.toString().toLowerCase();return n.filter((function(e){return e.toString().toLowerCase().includes(o)}))}return n},e.decorators=[{type:t.Component,args:[{selector:"award-multi-select-search",template:'<div class="award-multi-select">\n  <mat-form-field class="award-multi-select__form-field">\n    <div class="award-multi-select__text-contianer">\n      <label *ngIf="(selectedOptions$ | async).length > 0" class="mat-body-1">\n        {{(selectedOptions$ | async)[0]}},\n      </label>\n      <span class="mat-body-1" *ngIf="(selectedOptions$ | async).length > 1">\n        (+{{(selectedOptions$ | async).length - 1}})\n      </span>\n    </div>\n    <div>\n        <input matInput #searchInput [formControl]="searchContrl" [matAutocomplete]="auto" (focus)="_setFocus(true)" (blur)="_setFocus(false)">\n    </div>\n    <mat-icon matPrefix color="accent">search</mat-icon>\n    <mat-icon matSuffix color="accent" *ngIf="(selectedOptions$ | async).length" class="award-multi-select__close-icon" (click)="clearFilter()">\n      close\n    </mat-icon>\n  </mat-form-field>\n  <mat-autocomplete autoActiveFirstOption #auto="matAutocomplete" (optionSelected)="onOptionSelectionChange($event.option.value)">\n      <div class="award-multi-select__select-all">\n          <mat-checkbox \n          color="primary"\n          [checked]="(selectedOptions$ | async).length == (autoCompleteData$ | async).length"\n          disableRipple=true (change)="onOptionSelectionChange(\'All\')">\n            <span class="mat-caption">select all</span>\n          </mat-checkbox>\n      </div>\n     \n    <mat-option *ngFor="let option of filteredOptions$ | async"\n      [value]="option">\n      <mat-checkbox \n      color="primary"\n      (click)="$event.stopPropagation()"\n      (change)="onOptionSelectionChange(option)"\n      [checked]="(selectedOptions$ | async).includes(option) ? true : false"\n      disableRipple=true>\n      <span class="mat-caption">{{option}}</span>\n      </mat-checkbox> \n      \n    </mat-option>\n  </mat-autocomplete>\n</div>',encapsulation:t.ViewEncapsulation.None,styles:[".award-multi-select{width:inherit;overflow:hidden}.award-multi-select__select-all{margin:1rem}.award-multi-select__close-icon{cursor:pointer}.award-multi-select__form-field{width:inherit;margin:.5rem 0;background-color:#f9fafc}.award-multi-select__form-field .mat-form-field-underline{display:none}.award-multi-select__form-field .mat-form-field-wrapper{padding:0}.award-multi-select__form-field .mat-form-field-infix{padding:0;border:none;display:flex}.award-multi-select__form-field .mat-form-field-flex{align-items:center;padding:.07rem}.award-multi-select__text-contianer{display:flex;max-width:80%}.award-multi-select__text-contianer span{flex:0 1 auto}.award-multi-select__text-contianer label{flex:0 1 auto;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={searchInput:[{type:t.ViewChild,args:["searchInput",null]}],autoComplete:[{type:t.ViewChild,args:["searchInput",{read:o.MatAutocompleteTrigger,static:!0}]}],liveChange:[{type:t.Output}],dataSource:[{type:t.Input}]},e}();var m=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[a.CommonModule,o.MatCheckboxModule,o.MatFormFieldModule,o.MatListModule,o.MatInputModule,o.MatAutocompleteModule,r.FormsModule,r.ReactiveFormsModule,o.MatIconModule],entryComponents:[],declarations:[u],exports:[u],schemas:[t.CUSTOM_ELEMENTS_SCHEMA]}]}],e}();var p=function(){function e(e){this.datepipe=e,this.selectionChange=new t.EventEmitter,this.allColumns=[],this.filters={},this.loading$=new i.BehaviorSubject(!0),this.mode="None",this.selectAll=!1,this.loading$.next(!0),this.isExpandable=!1,this.tableData=new o.MatTableDataSource([])}return e.prototype.ngOnInit=function(){if(this.selection=new l.SelectionModel("MultiSelect"===this.mode,[],!0),this.displayedColumns){this.displayedColumns.map((function(e){e.bindingKey||(e.bindingKey=e.text),!1!==e.searchVisible&&(e.searchVisible=!0)})),this.allColumns=this.allColumns.concat(this.displayedColumns.map((function(e){return e.bindingKey}))),this._handleMode();var e=this.displayedColumns.filter((function(e){return!0===e.intialSort}));this.intialSort=e.length?e[0].bindingKey:""}},e.prototype.ngOnChanges=function(e){var t=this;e.dataSource&&e.dataSource.currentValue&&(null!==e.dataSource.currentValue&&this.loading$.next(!1),this.selection=new l.SelectionModel("MultiSelect"===this.mode,[],!0),this.tableData=new o.MatTableDataSource(e.dataSource.currentValue),this.tableData.filterPredicate=function(e,a){return t.getTableFilterPredicate(e,a)},this.tableData.paginator=this.paginator,this.tableData.sort=this.sort,this.clearFilter(),this.selectAll&&"MultiSelect"===this.mode&&this.tableData.data.forEach((function(e){return t.selection.select(e)})))},e.prototype.getSelectedItems=function(){return this.selection.selected},e.prototype.clearSelection=function(){this.selection.clear()},e.prototype.toggleRowExpansion=function(e){this.isExpandable&&(this.expandedElement=this.expandedElement===e?null:e)},e.prototype.getRowData=function(e){var t=this;return"date"===this.displayedColumns.filter((function(t){return t.bindingKey===e}))[0].type?this.tableData&&this.tableData.data.map((function(a){return t.datepipe.transform(a[e],"yyyy-MM-dd HH:mm")})):this.tableData&&this.tableData.data.map((function(t){return t[e]}))},e.prototype.isAllSelected=function(){return this.selection.selected.length===(this.tableData.filteredData.length?this.tableData.filteredData.length:this.tableData.data.length)},e.prototype.clearFilter=function(){this.searchComponents&&this.searchComponents.forEach((function(e){return e.clearFilter()}))},e.prototype.applyFilter=function(e,t){this.filters[t]=e,this.tableData.filter=this.filters},e.prototype.masterToggle=function(){var e=this;this.isAllSelected()?this.selection.clear():(this.tableData.filteredData.length?this.tableData.filteredData:this.tableData.data).forEach((function(t){return e.selection.select(t)})),this.selectionChange.emit(this.getSelectedItems())},e.prototype.onSingleSelectionChange=function(e){this.selection.toggle(e),this.selectionChange.emit(this.getSelectedItems())},e.prototype._handleMode=function(){if("MultiSelect"!==this.mode&&"SingleSelect"!==this.mode||this.allColumns.includes("select")){if("None"===this.mode){var e=this.allColumns.indexOf("select");(e=e>=0?e:this.allColumns.indexOf("action"))>=0&&this.allColumns.splice(e,1)}}else this.allColumns.unshift("select")},e.prototype.getTableFilterPredicate=function(e,t){var a=this,n=[];return Object.keys(t).forEach((function(l){var i=t[l];if(i.length){var o=[];i.forEach((function(t){if(!e[l])return o.push(!1);if("date"===a.displayedColumns.filter((function(e){return e.bindingKey===l}))[0].type){var n=a.datepipe.transform(e[l],"dd-MM-yy")===t;return o.push(n)}return o.push(e[l].toString().includes(t))})),n.push(o.some(Boolean))}})),n.every(Boolean)},Object.defineProperty(e.prototype,"isSearchVisibleForSomeColumn",{get:function(){return this.displayedColumns&&this.displayedColumns.filter((function(e){return!0===e.searchVisible})).length>0},enumerable:!0,configurable:!0}),e.decorators=[{type:t.Component,args:[{selector:"rich-data-table",template:'<div class="rich-data-table">\n   <mat-table\n   [ngClass]="tableData.data.length == 0 || (loading$ | async) ? \'rich-data-table__table\' : \'rich-data-table__table max-height\'"\n   mat-table [dataSource]="tableData" matSort [matSortActive]="intialSort" matSortDirection="asc"\n   matSortDisableClear multiTemplateDataRows>\n   \x3c!-- Checkbox Column --\x3e\n   <ng-container matColumnDef="select" *ngIf="mode === \'MultiSelect\'">\n       <mat-header-cell *matHeaderCellDef>\n           <mat-checkbox color="primary" (change)="$event ? masterToggle() : null"\n               [checked]="selection.hasValue() && isAllSelected()"\n               [indeterminate]="selection.hasValue() && !isAllSelected()">\n           </mat-checkbox>\n       </mat-header-cell>\n       <mat-cell *matCellDef="let row">\n           <mat-checkbox color="primary" (click)="$event.stopPropagation()"\n               (change)="$event ? onSingleSelectionChange(row) : null" [checked]="selection.isSelected(row)">\n           </mat-checkbox>\n       </mat-cell>\n   </ng-container>\n   <ng-container matColumnDef="select" *ngIf="mode === \'SingleSelect\'">\n           <mat-header-cell *matHeaderCellDef>\n           </mat-header-cell>\n           <mat-cell *matCellDef="let row">\n               <mat-radio-button (change)="$event ? onSingleSelectionChange(row) : null" color="primary" [checked]=false></mat-radio-button>\n           </mat-cell>\n       </ng-container>\n   \x3c!-- All Columns --\x3e\n   <ng-container *ngFor="let column of displayedColumns" [matColumnDef]="column.bindingKey">\n       <mat-header-cell *matHeaderCellDef>\n           <div class="rich-data-table__table-column-header">\n               <p mat-sort-header [title]="column.text" [class.addBorder]="isSearchVisibleForSomeColumn">{{column.text}}</p>\n               <award-multi-select-search *ngIf="column.searchVisible && tableData"\n                   (liveChange)="applyFilter($event,column.bindingKey)"\n                   [dataSource]=\'getRowData(column.bindingKey)\'>\n               </award-multi-select-search>\n           </div>\n       </mat-header-cell>\n       <mat-cell *matCellDef="let element"\n           [class]="column.iconTooltipBindingKey ? \'rich-data-table__table-icon-cell mat-column-\'+ column.bindingKey : \'mat-column-\'+ column.bindingKey">\n           <ng-template [ngIf]="column.type === \'template\' && column.columnTemplateRef" [ngIfElse]="defaultColumnTemp">\n               <ng-container \n                   [ngTemplateOutlet]="column.columnTemplateRef" \n                   [ngTemplateOutletContext]="{context: element, bindedKey:column.bindingKey}">\n               </ng-container>\n           </ng-template>\n           <ng-template #defaultColumnTemp>\n               <span *ngIf="column.type == \'string\'">{{element[column.bindingKey]}}</span>\n               <span *ngIf="column.type == \'date\'">{{element[column.bindingKey] | date: \'yyyy-MM-dd HH:mm\'}}</span>\n               <mat-icon *ngIf="column.iconTooltipBindingKey" \n                   [matTooltip]="element[column.iconTooltipBindingKey]"\n                   matTooltipClass=\'rich-data-table__icon-tooltip\' \n                   matTooltipPosition=\'after\' color="primary">\n                   info\n               </mat-icon>\n           </ng-template>\n       </mat-cell>\n   </ng-container>\n   \x3c!-- Expanded content  --\x3e\n   <ng-container matColumnDef="expandedDetail">\n           <mat-cell *matCellDef="let element">\n             <article [@detailExpand]="element == expandedElement ? \'expanded\' : \'collapsed\'">\n               <ng-container [ngTemplateOutlet]="expandedRowTemplateRef" [ngTemplateOutletContext]="{context: element}">\n               </ng-container>\n           </article>\n           </mat-cell>\n   </ng-container>\n   <mat-header-row *matHeaderRowDef="allColumns; sticky: true"></mat-header-row>\n   <mat-row *matRowDef="let row; columns: allColumns;"\n   [class.rich-data-table__table-row-highlight]="expandedElement == row">\n   </mat-row>\n   <mat-row *matRowDef="let row; columns: [\'expandedDetail\']" class="rich-data-table__table-expansion">\n   </mat-row>\n</mat-table>\n<div class="rich-data-table__loading-container" *ngIf="tableData.data.length == 0 || (loading$ | async)">\n   <mat-spinner color="primary" *ngIf="loading$ | async"></mat-spinner>\n   <span *ngIf="(tableData.data.length == 0 && !(loading$ | async)) || !dataSource">No data to display</span>\n</div>\n<div class="rich-data-table__table-footer">\n   <mat-paginator [pageSizeOptions]="[5, 10, 20]" [pageSize]="20" showFirstLastButtons></mat-paginator>\n   <button mat-button *ngIf="isSearchVisibleForSomeColumn" (click)="clearFilter()">\n       Clear filters\n   </button>\n</div>\n</div>',encapsulation:t.ViewEncapsulation.None,providers:[a.DatePipe],animations:[n.trigger("detailExpand",[n.state("collapsed",n.style({height:"0px",minHeight:"0",visibility:"hidden"})),n.state("expanded",n.style({height:"*",visibility:"visible"})),n.transition("expanded <=> collapsed",n.animate("225ms cubic-bezier(0.4, 0.0, 0.2, 1)"))])],styles:[".rich-data-table{display:flex;flex-direction:column;height:100%}.rich-data-table__table{width:100%;overflow:auto}.rich-data-table__table.max-height{flex:1 1 auto}.rich-data-table__table award-multi-select-search{width:98%}.rich-data-table__table .mat-header-row{border-color:#d3d3d3;align-items:baseline;min-height:2.5rem}.rich-data-table__table .mat-row{min-height:36px;border-color:#d3d3d3}.rich-data-table__table .mat-header-cell:first-of-type{padding-left:0}.rich-data-table__table .mat-header-cell:last-of-type{padding-right:0}.rich-data-table__table mat-cell{word-break:break-all}.rich-data-table__table mat-cell:first-of-type{padding-left:0}.rich-data-table__table mat-cell:last-of-type{padding-right:0}.rich-data-table__table mat-cell .mat-icon{font-size:1.2rem;margin-left:.3rem;line-height:1.2;cursor:pointer}.rich-data-table__table .mat-column-select{flex:0 0 4.5%;padding-left:1rem}.rich-data-table__table .mat-column-select.mat-cell:first-of-type,.rich-data-table__table .mat-column-select.mat-header-cell:first-of-type{padding-left:1rem}.rich-data-table__table-row-highlight{border-bottom:none}.rich-data-table__table-expansion.mat-row{min-height:0;border:none}.rich-data-table__table-expansion article{width:100%;border-bottom:1px solid #d3d3d3}.rich-data-table__table-column-header{width:100%}.rich-data-table__table-column-header .addBorder{border-bottom:1px solid #d3d3d3}.rich-data-table__table-column-header .mat-sort-header-button{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;display:-ms-grid;display:grid}.rich-data-table__loading-container{place-items:center;flex:1 1 auto;display:flex;place-content:center;border-bottom:1px solid #d3d3d3;padding:1rem}.rich-data-table__table-icon{white-space:pre-line}.rich-data-table__table-icon-cell{display:-ms-grid;display:grid;grid:auto/minmax(auto,2.3rem) auto}.rich-data-table__table-icon-cell span{text-align:right}.rich-data-table__table-footer{display:flex;place-content:flex-end}.rich-data-table__icon-tooltip{white-space:pre;font-size:12px;opacity:.9}"]}]}],e.ctorParameters=function(){return[{type:a.DatePipe}]},e.propDecorators={dataSource:[{type:t.Input}],displayedColumns:[{type:t.Input}],mode:[{type:t.Input}],selectAll:[{type:t.Input}],expandedRowTemplateRef:[{type:t.Input}],isExpandable:[{type:t.Input}],selectionChange:[{type:t.Output}],sort:[{type:t.ViewChild,args:[o.MatSort,null]}],paginator:[{type:t.ViewChild,args:[o.MatPaginator,{static:!0}]}],searchComponents:[{type:t.ViewChildren,args:[u,null]}]},e}();var h=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[p],imports:[a.CommonModule,o.MatTableModule,o.MatButtonModule,o.MatIconModule,o.MatCheckboxModule,o.MatPaginatorModule,o.MatProgressSpinnerModule,o.MatNativeDateModule,o.MatSortModule,o.MatTooltipModule,o.MatRadioModule,o.MatIconModule,m],exports:[p]}]}],e}();e.RichDataTableAngularComponent=p,e.RichDataTableAngularModule=h,e.RichDataTableAngularService=d,e.ɵa=u,e.ɵb=m,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=rich-data-table-angular.umd.min.js.map