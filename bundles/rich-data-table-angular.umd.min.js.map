{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://rich-data-table-angular/lib/rich-data-table-angular.service.ts","ng://rich-data-table-angular/lib/multi-select-search/multi-select-search.component.ts","ng://rich-data-table-angular/lib/multi-select-search/multi-select-search.module.ts","ng://rich-data-table-angular/lib/rich-data-table-angular.component.ts","ng://rich-data-table-angular/lib/rich-data-table-angular.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","RichDataTableAngularService","Injectable","args","providedIn","MultiSelectSearchComponent","this","searchContrl","FormControl","autoCompleteContrl","selectedOptions$","BehaviorSubject","autoCompleteData$","liveChange","EventEmitter","prototype","ngOnInit","_this","filteredOptions$","combineLatest","valueChanges","pipe","startWith","distinctUntilChanged","a","b","join","map","_a","_b","searchValue","data","_filter","ngOnChanges","changes","dataSource","currentValue","arguments","length","concat","__spread","Set","filter","d","clearFilter","setValue","emit","remove","option","selectedOptions","selectedOptionsValue","add","onOptionSelectionChange","selectedValue","getValue","newOption","includes","searchInput","nativeElement","blur","autoComplete","closePanel","_setFocus","isFocussed","panelOpen","Object","defineProperty","searchData","allData","selected_1","unselected","filterValue_1","toString","toLowerCase","Component","selector","template","encapsulation","ViewEncapsulation","None","ViewChild","read","MatAutocompleteTrigger","static","Output","Input","AwardMultiSelectSearchModule","NgModule","imports","CommonModule","MatCheckboxModule","MatFormFieldModule","MatListModule","MatInputModule","MatAutocompleteModule","FormsModule","ReactiveFormsModule","MatIconModule","entryComponents","declarations","exports","schemas","CUSTOM_ELEMENTS_SCHEMA","RichDataTableAngularComponent","datepipe","selectionChange","allColumns","filters","loading$","mode","selectAll","isExpandable","tableData","MatTableDataSource","selection","SelectionModel","displayedColumns","column","bindingKey","text","searchVisible","_handleMode","intialSort","filterPredicate","getTableFilterPredicate","paginator","sort","forEach","row","select","getSelectedItems","selected","clearSelection","clear","toggleRowExpansion","expandedElement","getRowData","type","transform","isAllSelected","filteredData","searchComponents","searchComponent","applyFilter","masterToggle","onSingleSelectionChange","toggle","index","indexOf","splice","unshift","matchFilter","keys","searchValues","customFilter_1","isEqual","some","Boolean","every","c","providers","DatePipe","animations","trigger","state","style","height","minHeight","visibility","transition","animate","MatSort","MatPaginator","ViewChildren","RichDataTableAngularModule","MatTableModule","MatButtonModule","MatPaginatorModule","MatProgressSpinnerModule","MatNativeDateModule","MatSortModule","MatTooltipModule","MatRadioModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RichDataTableAngularService {\n\n  constructor() { }\n}\n","import {  Component,\n          OnInit,\n          ViewChild,\n          ElementRef,\n          Output,\n          EventEmitter,\n          Input,\n          OnChanges,\n          SimpleChanges,\n          ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { MatAutocompleteTrigger } from '@angular/material';\nimport { startWith, map, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'award-multi-select-search',\n  templateUrl: './multi-select-search.component.html',\n  styleUrls: ['./multi-select-search.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MultiSelectSearchComponent implements OnInit, OnChanges {\n  searchContrl = new FormControl();\n  private autoCompleteContrl = new FormControl();\n  filteredOptions$: Observable<string[]>;\n  selectedOptions$ = new BehaviorSubject<string[]>([]);\n  autoCompleteData$ = new BehaviorSubject<Array<string>>([]);\n\n  @ViewChild('searchInput', null) searchInput: ElementRef<HTMLInputElement>;\n  @ViewChild('searchInput', { read: MatAutocompleteTrigger, static: true }) autoComplete: MatAutocompleteTrigger;\n\n  @Output()\n  liveChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n  @Input()\n  dataSource;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.filteredOptions$ = combineLatest(\n      this.searchContrl.valueChanges.pipe(startWith('')),\n      this.autoCompleteData$\n      .pipe(startWith([]))\n      .pipe(distinctUntilChanged((a, b) => a.join(',') === b.join(',')))\n    )\n    .pipe(map(([searchValue, data]) => this._filter(searchValue, data)));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.dataSource.currentValue) {\n      const data = [...new Set(changes.dataSource.currentValue)];\n      this.autoCompleteData$.next(data.filter(d => d !== null) as string[]);\n    }\n  }\n  /**\n   * Method to all clear the filter values\n   */\n  public clearFilter(): void {\n    this.searchContrl.setValue('');\n    this.selectedOptions$.next([]);\n    this.liveChange.emit([]);\n  }\n  /**\n   * Method to remove an item from filter\n   * @param option - filter string to be removed\n   */\n  private remove(option: string): void {\n    const selectedOptions = this.selectedOptionsValue.filter(o => o !== option);\n    this.selectedOptions$.next(selectedOptions);\n    this.liveChange.emit(selectedOptions);\n  }\n  /**\n   * Method to add filter to existing filter string\n   * @param option - filter string to be added\n   */\n  private add(option: string): void {\n    const selectedOptions = this.selectedOptionsValue;\n    selectedOptions.push(option);\n    this.selectedOptions$.next(selectedOptions);\n    this.liveChange.emit(selectedOptions);\n  }\n  /**\n   * Handler for select/deselect/select-all of items from suggestions\n   * @param selectedValue - selected/deselected value\n   */\n  onOptionSelectionChange(selectedValue: string): void {\n    if (selectedValue === 'All') {\n      this.selectedOptionsValue.length === this.autoCompleteData$.getValue().length ?\n      this.selectedOptions$.next([]) : this.selectedOptions$.next(this.autoCompleteData$.getValue());\n      this.liveChange.emit(this.selectedOptionsValue);\n    } else {\n      const newOption = selectedValue;\n      this.selectedOptionsValue.includes(newOption) ? this.remove(newOption) : this.add(newOption);\n    }\n    this.searchContrl.setValue('');\n    this.searchInput.nativeElement.blur();\n    this.autoComplete.closePanel();\n    // setTimeout(() => {\n    //   this.autoComplete.openPanel();\n    // });\n  }\n  /**\n   * Clear search field on focus out without changing searchform control\n   */\n  _setFocus(isFocussed) {\n    if (!isFocussed && !this.autoComplete.panelOpen) {\n      this.searchContrl.setValue(null);\n    }\n  }\n  /**\n   * Getter for selected options\n   */\n  get selectedOptionsValue() {\n    return this.selectedOptions$.getValue();\n  }\n  /**\n   * Utility method for filtering the suggestions based on typed value\n   * @param value - typed value\n   * @param searchData - datasource\n   */\n  private _filter(value: string, searchData: Array<string>): string[] {\n    let allData = searchData;\n    if (this.selectedOptionsValue.length) {\n      // showing all selected values first followed by unselected values\n      const selected = searchData.filter(data => this.selectedOptionsValue.includes(data));\n      const unselected = searchData.filter(data => !selected.includes(data));\n      allData = selected.concat(unselected);\n    }\n    if (value) {\n      const filterValue = value.toString().toLowerCase();\n      return allData.filter(option => {\n        return option.toString().toLowerCase().includes(filterValue);\n      });\n     } else {\n      return allData;\n     }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport {MatCheckboxModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatFormFieldModule,\n        MatListModule,\n        MatIconModule\n        } from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MultiSelectSearchComponent } from './multi-select-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule\n  ],\n  entryComponents: [\n  ],\n  declarations: [\n    MultiSelectSearchComponent],\n  exports: [\n    MultiSelectSearchComponent\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AwardMultiSelectSearchModule {}\n","import { Component, OnInit, ViewEncapsulation, OnChanges, Input, TemplateRef, Output, \n  EventEmitter, ViewChild, ViewChildren, QueryList, SimpleChanges } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { MultiSelectSearchComponent } from './multi-select-search';\n\nexport interface AwardDataColumn {\n  text: string;\n  bindingKey?: string;\n  type: ColumnType;\n  iconTooltipBindingKey?: string;\n  intialSort?: boolean;\n  searchVisible?: boolean;\n  columnTemplateRef?: TemplateRef<any>;\n}\n\nexport type SelectMode = 'None' | 'SingleSelect' | 'MultiSelect';\nexport type ColumnType = 'string' | 'date' | 'template';\n\ninterface TableFilter {\n  [column: string]: string[];\n}\n\n@Component({\n  selector: 'rich-data-table',\n  templateUrl: './rich-data-table-angular.component.html',\n  styleUrls: ['./rich-data-table-angular.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [DatePipe],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', visibility: 'hidden'})),\n      state('expanded', style({height: '*', visibility: 'visible'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class RichDataTableAngularComponent implements OnInit, OnChanges {\n\n  @Input()\n  dataSource;\n\n  @Input()\n  displayedColumns: Array<AwardDataColumn>;\n\n  @Input()\n  mode?: SelectMode;\n\n  @Input()\n  selectAll?: boolean;\n\n  @Input()\n  expandedRowTemplateRef?: TemplateRef<any>;\n\n  @Input()\n  isExpandable?: boolean;\n\n  @Output()\n  selectionChange: EventEmitter<object> = new EventEmitter<object>();\n\n  allColumns: string[] = [];\n  private filters: TableFilter = {};\n  selection: SelectionModel<object>;\n  loading$ = new BehaviorSubject<boolean>(true);\n  tableData;\n  intialSort: string;\n  expandedElement: object;\n\n  @ViewChild(MatSort, null) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChildren(MultiSelectSearchComponent, null) searchComponents: QueryList<MultiSelectSearchComponent>;\n\n\n  constructor(public datepipe: DatePipe) {\n    this.mode = 'None';\n    this.selectAll = false;\n    this.loading$.next(true);\n    this.isExpandable = false;\n    this.tableData = new MatTableDataSource([]);\n  }\n\n  ngOnInit() {\n    this.selection = new SelectionModel<object>(this.mode === 'MultiSelect', [], true);\n    if (this.displayedColumns) {\n      this.displayedColumns.map(column => {\n        if (!column.bindingKey) {\n          column.bindingKey = column.text;\n        }\n        if (column.searchVisible !== false) {\n          column.searchVisible = true;\n        }\n      });\n      this.allColumns = this.allColumns.concat(this.displayedColumns.map(column => column.bindingKey));\n      this._handleMode();\n      const intialSort = this.displayedColumns.filter(d => d.intialSort === true);\n      this.intialSort = intialSort.length ? intialSort[0].bindingKey : '';\n    }\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.dataSource && changes.dataSource.currentValue) {\n      if (changes.dataSource.currentValue !== null) {\n        this.loading$.next(false);\n      }\n      this.selection = new SelectionModel<object>(this.mode === 'MultiSelect', [], true);\n      this.tableData = new MatTableDataSource(changes.dataSource.currentValue);\n      this.tableData.filterPredicate =\n        (data: object, filters: TableFilter) => {\n          return this.getTableFilterPredicate(data, filters);\n        };\n      this.tableData.paginator = this.paginator;\n      this.tableData.sort = this.sort;\n      this.clearFilter();\n      if (this.selectAll && this.mode === 'MultiSelect') {\n        this.tableData.data.forEach(row => this.selection.select(row));\n      }\n    }\n  }\n  /**\n   * Getter for selected items from table\n   */\n  public getSelectedItems(): any {\n    return this.selection.selected;\n  }\n  /**\n   * Method to clear all selection from Table\n   */\n  public clearSelection() {\n    this.selection.clear();\n  }\n  public toggleRowExpansion(row) {\n    if (this.isExpandable) {\n      this.expandedElement = this.expandedElement === row ? null : row;\n    }\n  }\n  /**\n   * Utility method to getRowData\n   * @param row - row name\n   */\n  public getRowData(row: string) {\n    const column: AwardDataColumn = this.displayedColumns.filter(o => o.bindingKey === row)[0];\n    if (column.type === 'date') {\n      return this.tableData && this.tableData.data.map(o => this.datepipe.transform(o[row], 'yyyy-MM-dd HH:mm'));\n    } else {\n      return this.tableData && this.tableData.data.map(o => o[row]);\n    }\n  }\n  /**\n   * Utility method to check if all items are selected\n   */\n  public isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.tableData.filteredData.length ?\n                    this.tableData.filteredData.length :\n                    this.tableData.data.length;\n    return numSelected === numRows;\n  }\n  /**\n   * Handler for clearing the filters\n   */\n  clearFilter() {\n    if (this.searchComponents) {\n      this.searchComponents.forEach(searchComponent => searchComponent.clearFilter());\n    }\n  }\n  /**\n   * Hanlder for applying filter on livechange of text in filter\n   */\n  public applyFilter(filters: string[], column: string) {\n    this.filters[column] = filters;\n    this.tableData.filter = this.filters;\n  }\n  /**\n   * Selects all rows if they are not all selected; otherwise clear selection\n   */\n  public masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      (this.tableData.filteredData.length ? this.tableData.filteredData : this.tableData.data)\n      .forEach(row => this.selection.select(row));\n    this.selectionChange.emit(this.getSelectedItems());\n  }\n  /**\n   * Handler for selection/deselection of items and to emit the change event\n   * @param row - Row to be selected/deselected\n   */\n  public onSingleSelectionChange(row: object) {\n    this.selection.toggle(row);\n    this.selectionChange.emit(this.getSelectedItems());\n  }\n  /**\n   * Utility method to handle the table selection mode\n   */\n  private _handleMode() {\n    if ((this.mode === 'MultiSelect' || this.mode === 'SingleSelect') && !this.allColumns.includes('select')) {\n      this.allColumns.unshift('select');\n    } else if (this.mode === 'None') {\n      let index = this.allColumns.indexOf('select');\n      index >= 0 ? index = index : index = this.allColumns.indexOf('action');\n      if (index >= 0) {\n        this.allColumns.splice(index, 1);\n      }\n    }\n  }\n  /**\n   * Utility method to write the filter predicate for table\n   * @param data - table data\n   * @param filters - key value pair of <column> : <filter string>\n   */\n  private getTableFilterPredicate(data: object, filters: TableFilter) {\n    const matchFilter = [];\n    const columns = Object.keys(filters);\n    columns.forEach(column => {\n      const searchValues: string[] = filters[column];\n      if (searchValues.length) {\n        const customFilter = [];\n        searchValues.forEach(value => {\n          if (!data[column]) {\n            return customFilter.push(false);\n          }\n          const type = this.displayedColumns.filter(o => o.bindingKey === column)[0].type;\n          if (type === 'date') {\n            const isEqual = this.datepipe.transform(data[column], 'dd-MM-yy') === value;\n            return customFilter.push(isEqual);\n          } else {\n            return customFilter.push(data[column].toString().includes(value));\n          }\n\n        });\n        matchFilter.push(customFilter.some(Boolean)); // OR\n      }\n    });\n    return matchFilter.every(Boolean); // AND\n  }\n  get isSearchVisibleForSomeColumn() {\n    return this.displayedColumns && this.displayedColumns.filter(c => c.searchVisible === true).length > 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RichDataTableAngularComponent } from './rich-data-table-angular.component';\nimport {    MatTableModule,\n  MatButtonModule,\n  MatIconModule,\n  MatCheckboxModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatNativeDateModule,\n  MatSortModule,\n  MatTooltipModule,\n  MatRadioModule,\n  MatFormFieldModule} from '@angular/material';\nimport { AwardMultiSelectSearchModule } from './multi-select-search';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [RichDataTableAngularComponent],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatNativeDateModule,\n    MatSortModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatIconModule,\n    AwardMultiSelectSearchModule\n  ],\n  exports: [RichDataTableAngularComponent]\n})\nexport class RichDataTableAngularModule { }\n"]}